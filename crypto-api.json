{
  "openapi": "3.0.0",
  "info": {
    "title": "Crypto Trading API",
    "description": "This is a dummy API for Crypto Trading Project",
    "contact": {
      "email": "aarya.boya@zemosolabs.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/saichethan.madishetty/CryptoApi/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/AaryaZemoso/CryptoTrading/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/AaryaZemoso/CrytoTrading/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Watchlist",
      "description": "List of Cryptocurrencies"
    },
    {
      "name": "Transactions",
      "description": "List of Transactions"
    }
  ],
  "paths": {
    "/watchlist/{uid}": {
      "get": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Returns list of Cryptocurrency ID's from User Watchlist",
        "description": "By passing the user_id as a parameter, it lists out all the Cryptocurrency the user has added in his watchlist\n",
        "operationId": "getWatchlist",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of cryptocurrency id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WatchList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User ID Invalid"
          }
        }
      }
    },
    "/watchlist/{uid}/{cid}": {
      "put": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Adds the Cryptocurrency to the User's Watchlist",
        "description": "Passing the user_id and cryptocurrency_id, it will add the respective cryptocurrency to the user's watchlist\n",
        "operationId": "addToWatchlist",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Cryptocurrency ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Added successfully",
            "content": {}
          },
          "400": {
            "description": "Invalid User ID or Cryptocurrency ID"
          }
        }
      },
      "delete": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Deletes the Cryptocurrency from User's Watchlist",
        "description": "Passing the user_id and cryptocurrency_id, it will remove the respective cryptocurrency from the user's watchlist\n",
        "operationId": "deleteFromWatchlist",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Cryptocurrency ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removed successfully",
            "content": {}
          },
          "400": {
            "description": "Invalid User ID or Cryptocurrency ID"
          }
        }
      }
    },
    "/transactions/{userId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Returns recent transactions of user",
        "description": "By passing the user_id, offset, limit as parameters, it lists the recent transactions\n",
        "operationId": "getTransactions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of recent transactions",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of recent transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transactions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User ID Invalid"
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Used to buy the currency.",
        "description": "Passing the userId \n",
        "operationId": "buyCurrency",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Details of payment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Transactions"
            }
          }
        ],
        "responses": {
          "206": {
            "description": "Payment successful"
          },
          "400": {
            "description": "Invalid User ID"
          }
        }
      }
    },
    "/transactions/{userId}/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get the transaction based on the transaction id",
        "description": "Passing the user_id and transaction_id, it will give the transaction details\n",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions"
                }
              }
            }
          },
          "400": {
            "description": "Invalid User ID or Transaction ID"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WatchList": {
        "required": [
          "list_of_cryptocurrencies"
        ],
        "type": "object",
        "properties": {
          "list_of_cryptocurrencies": {
            "type": "array",
            "example": [
              "BTC",
              "ETH"
            ],
            "items": {
              "type": "string",
              "format": "cryptocurrencies_id"
            }
          }
        }
      },
      "Transactions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "currency_id": {
            "type": "string"
          },
          "units": {
            "type": "number",
            "format": "float64"
          },
          "total_value": {
            "type": "number",
            "format": "float64"
          },
          "status": {
            "type": "string"
          },
          "time_stamp": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_type": {
            "type": "string"
          },
          "payment_mode": {
            "type": "string"
          }
        }
      }
    }
  }
}
